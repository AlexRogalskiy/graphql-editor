{"remainingRequest":"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[[\"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/docz-core/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/react-docgen-typescript-loader/dist/index.js?{}!/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/src/editor/SelectLanguage.tsx","dependencies":[{"path":"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/src/editor/SelectLanguage.tsx","mtime":1545904438000},{"path":"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1537490019000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/src/editor/SelectLanguage.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport * as styles from './style/SelectLanguage';\nimport * as React from 'react';\nexport var SelectLanguage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectLanguage, _React$Component);\n\n  function SelectLanguage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SelectLanguage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SelectLanguage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      copied: false\n    };\n    return _this;\n  }\n\n  _createClass(SelectLanguage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          tabs = _this$props.tabs,\n          onSelect = _this$props.onSelect,\n          onCopy = _this$props.onCopy;\n      var copied = this.state.copied;\n      return React.createElement(\"div\", {\n        className: styles.Bar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.SelectLangugage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: styles.Select,\n        onChange: function onChange(e) {\n          onSelect(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, tabs.map(function (k) {\n        return React.createElement(\"option\", {\n          key: k,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, k);\n      }))), copied && React.createElement(\"div\", {\n        className: styles.Copied,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Copied to clipboard!\"), React.createElement(\"img\", {\n        className: styles.CopyIcon,\n        onClick: function onClick() {\n          _this2.setState({\n            copied: true\n          });\n\n          setTimeout(function () {\n            _this2.setState({\n              copied: false\n            });\n          }, 1000);\n          onCopy();\n        },\n        src: require('./assets/copyIcon.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return SelectLanguage;\n}(React.Component);\n\ntry {\n  // @ts-ignore\n  SelectLanguage.displayName = \"SelectLanguage\"; // @ts-ignore\n\n  SelectLanguage.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"SelectLanguage\",\n    \"props\": {\n      \"tabs\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"tabs\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string[]\"\n        }\n      },\n      \"onSelect\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onSelect\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"(x: any) => void\"\n        }\n      },\n      \"onCopy\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onCopy\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"() => void\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/editor/SelectLanguage.tsx#SelectLanguage\"] = {\n      docgenInfo: SelectLanguage.__docgenInfo,\n      name: \"SelectLanguage\",\n      path: \"src/editor/SelectLanguage.tsx#SelectLanguage\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(SelectLanguage, \"SelectLanguage\", \"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/src/editor/SelectLanguage.tsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/src/editor/SelectLanguage.tsx"],"names":["styles","React","SelectLanguage","state","copied","props","tabs","onSelect","onCopy","Bar","SelectLangugage","Select","e","target","value","map","k","Copied","CopyIcon","setState","setTimeout","require","Component","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error"],"mappings":"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","sourcesContent":["import * as styles from './style/SelectLanguage';\nimport * as React from 'react';\n\nexport type SelectLanguageProps = {\n  tabs: string[];\n  onSelect: (x: any) => void;\n  onCopy: () => void;\n};\ntype SelectLanguageState = {\n  copied: boolean;\n};\n\nexport class SelectLanguage extends React.Component<SelectLanguageProps, SelectLanguageState> {\n  state: SelectLanguageState = {\n    copied: false\n  };\n  render() {\n    const { tabs, onSelect, onCopy } = this.props;\n    const { copied } = this.state;\n    return (\n      <div className={styles.Bar}>\n        <div className={styles.SelectLangugage}>\n          <select\n            className={styles.Select}\n            onChange={(e) => {\n              onSelect(e.target.value);\n            }}\n          >\n            {tabs.map((k) => (\n              <option key={k}>{k}</option>\n            ))}\n          </select>\n        </div>\n        {copied && <div className={styles.Copied}>Copied to clipboard!</div>}\n        <img\n          className={styles.CopyIcon}\n          onClick={() => {\n            this.setState({\n              copied: true\n            });\n            setTimeout(() => {\n              this.setState({\n                copied: false\n              });\n            }, 1000);\n            onCopy();\n          }}\n          src={require('./assets/copyIcon.png')}\n        />\n      </div>\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    SelectLanguage.displayName = \"SelectLanguage\";\n    // @ts-ignore\n    SelectLanguage.__docgenInfo = { \"description\": \"\", \"displayName\": \"SelectLanguage\", \"props\": { \"tabs\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"tabs\", \"required\": true, \"type\": { \"name\": \"string[]\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": true, \"type\": { \"name\": \"(x: any) => void\" } }, \"onCopy\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onCopy\", \"required\": true, \"type\": { \"name\": \"() => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/editor/SelectLanguage.tsx#SelectLanguage\"] = { docgenInfo: SelectLanguage.__docgenInfo, name: \"SelectLanguage\", path: \"src/editor/SelectLanguage.tsx#SelectLanguage\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}