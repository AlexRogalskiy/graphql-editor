{"remainingRequest":"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[[\"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/docz-core/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/react-docgen-typescript-loader/dist/index.js?{}!/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/src/editor/Editor.tsx","dependencies":[{"path":"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/src/editor/Editor.tsx","mtime":1545911682000},{"path":"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1537490019000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/src/editor/Editor.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { Graph } from '@slothking-online/diagram';\nimport * as React from 'react';\nimport { CodeEditor } from './Code';\nimport { categories, singlePortOutput } from './categories';\nimport { nodeTypes, SubTypes } from './nodeTypes';\nimport { frontend, graphql, faker } from './livegen/code-generators';\nexport var Editor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Editor, _React$Component);\n\n  function Editor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Editor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Editor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      projectId: null,\n      serializeFunction: 'graphql'\n    };\n    return _this;\n  }\n\n  _createClass(Editor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filterDefinitions = function filterDefinitions(nodes, type) {\n        return nodes.filter(function (n) {\n          return n.type === type && n.subType === SubTypes.definition;\n        });\n      };\n\n      var mapToNode = function mapToNode(type) {\n        return function (n) {\n          return {\n            name: n.name,\n            node: {\n              name: n.name,\n              type: type,\n              subType: SubTypes.clone,\n              kind: n.name,\n              clone: n.id,\n              outputs: singlePortOutput,\n              inputs: [{\n                name: '',\n                accepted: [{\n                  node: {\n                    subType: SubTypes.field\n                  }\n                }, {\n                  node: {\n                    subType: SubTypes.definition,\n                    type: nodeTypes.Query\n                  }\n                }, {\n                  node: {\n                    subType: SubTypes.clone\n                  }\n                }]\n              }],\n              editable: true\n            }\n          };\n        };\n      };\n\n      var addType = function addType(nodes, type) {\n        return filterDefinitions(nodes, type).map(mapToNode(type));\n      };\n\n      var addImplements = function addImplements(nodes) {\n        return filterDefinitions(nodes, nodeTypes.interface).map(mapToNode(nodeTypes.implements));\n      };\n\n      var mirrorNodes = {\n        name: 'mirror',\n        items: [].concat(_toConsumableArray([nodeTypes.type, nodeTypes.interface, nodeTypes.input, nodeTypes.scalar, nodeTypes.union, nodeTypes.enum].map(function (n) {\n          return {\n            name: n,\n            items: addType(_this2.props.nodes, n)\n          };\n        })), [{\n          name: nodeTypes.implements,\n          items: addImplements(this.props.nodes)\n        }]).concat().filter(function (n) {\n          return n.items.length > 0;\n        })\n      };\n\n      var allCategories = _toConsumableArray(categories);\n\n      if (mirrorNodes.items.length > 0) {\n        allCategories = [mirrorNodes].concat(_toConsumableArray(allCategories));\n      }\n\n      var serializeFunction = {\n        graphql: graphql.serializeSchema,\n        typescript: frontend.serializeFrontend,\n        json: faker.serializeFaker\n      };\n      return React.createElement(React.Fragment, null, this.props.editorVisible === true && React.createElement(CodeEditor, {\n        schema: this.props.code,\n        schemaChanged: this.props.schemaChanged,\n        copiedToClipboard: this.props.copiedToClipboard,\n        remakeNodes: this.props.remakeNodes,\n        onTabChange: function onTabChange(e) {\n          var _this2$props = _this2.props,\n              nodes = _this2$props.nodes,\n              links = _this2$props.links,\n              tabs = _this2$props.tabs;\n\n          _this2.setState({\n            serializeFunction: e\n          });\n\n          _this2.props.result(serializeFunction[e](nodes, links, tabs));\n        },\n        language: this.state.serializeFunction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          left: 0,\n          top: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Graph, {\n        categories: allCategories,\n        loaded: this.props.loaded,\n        serialize: function serialize(nodes, links, tabs) {\n          if (nodes.length < 500) {\n            _this2.props.result(serializeFunction[_this2.state.serializeFunction](nodes, links, tabs));\n          }\n        },\n        dataSerialize: function dataSerialize(nodes, links, tabs) {\n          _this2.props.result(serializeFunction[_this2.state.serializeFunction](nodes, links, tabs));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Editor;\n}(React.Component);\n\ntry {\n  // @ts-ignore\n  Editor.displayName = \"Editor\"; // @ts-ignore\n\n  Editor.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Editor\",\n    \"props\": {\n      \"nodes\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"nodes\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"NodeType[]\"\n        }\n      },\n      \"links\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"links\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"LinkType[]\"\n        }\n      },\n      \"tabs\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"tabs\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string[]\"\n        }\n      },\n      \"loaded\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"loaded\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"LoadedFile\"\n        }\n      },\n      \"code\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"code\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"editorVisible\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"editorVisible\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"result\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"result\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"(props: { code: string; nodes: GraphQLNodeType[]; links: LinkType[]; }) => void\"\n        }\n      },\n      \"languageChanged\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"languageChanged\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(language: string) => void\"\n        }\n      },\n      \"schemaChanged\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"schemaChanged\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(schema: string) => void\"\n        }\n      },\n      \"copiedToClipboard\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"copiedToClipboard\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"() => void\"\n        }\n      },\n      \"remakeNodes\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"remakeNodes\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(nodes: GraphQLNodeType[], links: LinkType[], code: string) => void\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/editor/Editor.tsx#Editor\"] = {\n      docgenInfo: Editor.__docgenInfo,\n      name: \"Editor\",\n      path: \"src/editor/Editor.tsx#Editor\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Editor, \"Editor\", \"/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/src/editor/Editor.tsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/arturczemiel/.projects/graphqleditor.com/graphql-editor/src/editor/Editor.tsx"],"names":["Graph","React","CodeEditor","categories","singlePortOutput","nodeTypes","SubTypes","frontend","graphql","faker","Editor","state","projectId","serializeFunction","filterDefinitions","nodes","type","filter","n","subType","definition","mapToNode","name","node","clone","kind","id","outputs","inputs","accepted","field","Query","editable","addType","map","addImplements","interface","implements","mirrorNodes","items","input","scalar","union","enum","props","length","allCategories","serializeSchema","typescript","serializeFrontend","json","serializeFaker","editorVisible","code","schemaChanged","copiedToClipboard","remakeNodes","e","links","tabs","setState","result","position","left","top","loaded","Component","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error"],"mappings":"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","sourcesContent":["import {\n  ActionCategory,\n  Graph,\n  Item,\n  NodeType,\n  LinkType,\n  LoadedFile\n} from '@slothking-online/diagram';\nimport * as React from 'react';\nimport { CodeEditor, TABS, CodeEditorOuterProps } from './Code';\nimport { categories, singlePortOutput } from './categories';\nimport { nodeTypes, SubTypes } from './nodeTypes';\nimport { GraphQLNodeType, frontend, graphql, faker } from './livegen/code-generators';\n\nexport type EditorState = {\n  projectId?: string;\n  serializeFunction: keyof typeof TABS;\n};\nexport type EditorProps = {\n  nodes?: NodeType[];\n  links?: LinkType[];\n  tabs?: string[];\n  loaded: LoadedFile;\n  code: string;\n  editorVisible: boolean;\n  result: (\n    props: {\n      code: string;\n      nodes: GraphQLNodeType[];\n      links: LinkType[];\n    }\n  ) => void;\n} & CodeEditorOuterProps;\n\nexport class Editor extends React.Component<EditorProps, EditorState> {\n  state: EditorState = {\n    projectId: null,\n    serializeFunction: 'graphql'\n  };\n  componentDidMount() {}\n  render() {\n    const filterDefinitions = (nodes: NodeType[], type: keyof typeof nodeTypes) =>\n      nodes.filter((n: NodeType) => n.type === type && n.subType === SubTypes.definition);\n    const mapToNode = (type: keyof typeof nodeTypes) => (n: NodeType) => ({\n      name: n.name,\n      node: {\n        name: n.name,\n        type,\n        subType: SubTypes.clone,\n        kind: n.name,\n        clone: n.id,\n        outputs: singlePortOutput,\n        inputs: [\n          {\n            name: '',\n            accepted: [\n              {\n                node: {\n                  subType: SubTypes.field\n                }\n              },\n              {\n                node: {\n                  subType: SubTypes.definition,\n                  type: nodeTypes.Query\n                }\n              },\n              {\n                node: {\n                  subType: SubTypes.clone\n                }\n              }\n            ]\n          }\n        ],\n        editable: true\n      }\n    });\n    const addType = (nodes: NodeType[], type: keyof typeof nodeTypes): Item[] =>\n      filterDefinitions(nodes, type).map(mapToNode(type));\n    const addImplements = (nodes: NodeType[]): Item[] =>\n      filterDefinitions(nodes, nodeTypes.interface).map(mapToNode(nodeTypes.implements));\n\n    const mirrorNodes: ActionCategory = {\n      name: 'mirror',\n      items: [\n        ...[\n          ...[\n            nodeTypes.type,\n            nodeTypes.interface,\n            nodeTypes.input,\n            nodeTypes.scalar,\n            nodeTypes.union,\n            nodeTypes.enum\n          ].map((n) => ({\n            name: n,\n            items: addType(this.props.nodes, n)\n          })),\n          {\n            name: nodeTypes.implements,\n            items: addImplements(this.props.nodes)\n          }\n        ]\n      ].filter((n) => n.items.length > 0)\n    };\n    let allCategories: ActionCategory[] = [...categories];\n    if (mirrorNodes.items.length > 0) {\n      allCategories = [mirrorNodes, ...allCategories];\n    }\n    const serializeFunction = {\n      graphql: graphql.serializeSchema,\n      typescript: frontend.serializeFrontend,\n      json: faker.serializeFaker\n    };\n\n    return (\n      <>\n        {this.props.editorVisible === true && (\n          <CodeEditor\n            schema={this.props.code}\n            schemaChanged={this.props.schemaChanged}\n            copiedToClipboard={this.props.copiedToClipboard}\n            remakeNodes={this.props.remakeNodes}\n            onTabChange={(e) => {\n              const { nodes, links, tabs } = this.props;\n              this.setState({\n                serializeFunction: e\n              });\n              this.props.result(serializeFunction[e](nodes, links, tabs));\n            }}\n            language={this.state.serializeFunction}\n          />\n        )}\n        <div style={{ position: 'absolute', left: 0, top: 0 }}>\n          <Graph\n            categories={allCategories}\n            loaded={this.props.loaded}\n            serialize={(nodes, links, tabs) => {\n              if (nodes.length < 500) {\n                this.props.result(\n                  serializeFunction[this.state.serializeFunction](nodes, links, tabs)\n                );\n              }\n            }}\n            dataSerialize={(nodes, links, tabs) => {\n              this.props.result(\n                serializeFunction[this.state.serializeFunction](nodes, links, tabs)\n              );\n            }}\n          />\n        </div>\n      </>\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    Editor.displayName = \"Editor\";\n    // @ts-ignore\n    Editor.__docgenInfo = { \"description\": \"\", \"displayName\": \"Editor\", \"props\": { \"nodes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"nodes\", \"required\": false, \"type\": { \"name\": \"NodeType[]\" } }, \"links\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"links\", \"required\": false, \"type\": { \"name\": \"LinkType[]\" } }, \"tabs\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"tabs\", \"required\": false, \"type\": { \"name\": \"string[]\" } }, \"loaded\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"loaded\", \"required\": true, \"type\": { \"name\": \"LoadedFile\" } }, \"code\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"code\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"editorVisible\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"editorVisible\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"result\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"result\", \"required\": true, \"type\": { \"name\": \"(props: { code: string; nodes: GraphQLNodeType[]; links: LinkType[]; }) => void\" } }, \"languageChanged\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"languageChanged\", \"required\": false, \"type\": { \"name\": \"(language: string) => void\" } }, \"schemaChanged\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schemaChanged\", \"required\": false, \"type\": { \"name\": \"(schema: string) => void\" } }, \"copiedToClipboard\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"copiedToClipboard\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"remakeNodes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"remakeNodes\", \"required\": false, \"type\": { \"name\": \"(nodes: GraphQLNodeType[], links: LinkType[], code: string) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/editor/Editor.tsx#Editor\"] = { docgenInfo: Editor.__docgenInfo, name: \"Editor\", path: \"src/editor/Editor.tsx#Editor\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}